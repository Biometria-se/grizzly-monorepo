# Adding a new package to the workspace, also needs to be added here:
# - tool.pytest.ini_options
# - tool.coverage.run
# - tool.mypy
[project]
name = "grizzly-loadtester-monorepo"
version = "0.1.0"
description = "Monorepo containing all grizzly related packages"
readme = "README.md"
license = "MIT"
requires-python = ">=3.10"

[tool.uv.pip]
link-mode = "copy"

[tool.hatch.envs.test]
detached = true
type = "virtual"
installer = "uv"
python = "{matrix:python}"
dependencies = ["virtualenv"]

[[tool.hatch.envs.test.matrix]]
python = ["3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.test.scripts]
install = ["uv sync --locked -p {matrix:python} --active --all-packages --group dev"]

framework = ["install", "python -m pytest framework/tests/ --ignore=framework/tests/test_framework/e2e"]
framework-e2e = ["install", "python -m pytest framework/tests/ --ignore=framework/tests/test_framework/unit"]
framework-e2e-dist = ["install", "E2E_DIST_MODE=dist python -m pytest framework/tests/ --ignore=framework/tests/test_framework/unit"]
framework-e2e-example = ["install", "python -m pytest -s framework/tests/test_framework/e2e/test_example.py::test_e2e_example"]

cli = ["install", "python -m pytest command-line-interface/tests --ignore=command-line-interface/tests/test_cli/e2e"]
cli-e2e = ["install", "python -m pytest command-line-interface/tests --ignore=command-line-interface/tests/test_cli/unit"]
cli-e2e-example = ["install", "python -m pytest command-line-interface/tests/test_cli/e2e/test_run.py"]

common = ["install", "python -m pytest common/tests"]

all = ["framework", "cli", "common", "framework-e2e", "cli-e2e", "framework-e2e-dist"]
framework-all = ["framework", "framework-e2e", "framework-e2e-dist"]
cli-all = ["cli", "cli-e2e"]

[tool.hatch.envs.lint]
detached = true
type = "virtual"
installer = "uv"
python = "{matrix:python}"

[[tool.hatch.envs.lint.matrix]]
python = ["3.10", "3.13"]

[tool.hatch.envs.lint.scripts]
install = ["uv sync --locked -p {matrix:python} --active --all-packages --group dev"]
all = ["types", "format"]
types = ["install", "python -m mypy"]
format = ["install", "ruff check .", "ruff format --check"]
format-fix = ["install", "ruff check . --fix", "ruff format"]

[tool.uv.workspace]
members = [
    "framework",
    "common",
    "docs",
    "command-line-interface",
]

[dependency-groups]
ci = [
    "build>=1.3.0",
    "twine>=6.1.0",
]
dev = [
    "astunparse>=1.6.3",
    "atomicwrites>=1.4.1",
    "coverage[toml]>=7.10.5",
    "hatch>=1.14.1",
    "line-profiler>=5.0.0",
    "mypy>=1.17.1",
    "parameterized>=0.9.0",
    "pipdeptree>=2.28.0",
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pytest-mock>=3.14.1",
    "pytest-timeout>=2.4.0",
    "ruff>=0.12.10",
    "snakeviz>=2.2.2",
]

[tool.ruff]
exclude = [
    ".env", ".venv", ".pytest_tmp", "build", "dist", "**/__version__.py"
]
line-length = 180
indent-width = 4

[tool.ruff.format]
quote-style = "single"
indent-style = "space"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "ANN401",
    "BLE001",
    "COM812",
    "D101", "D102", "D103", "D105", "D106", "D107", "D203", "D213", "D205", "D301", "D407", "D417",
    "DTZ005",
    "E722", "E402",
    "F405", "F403",
    "N801",
    "PD011",
    "PLR2004",
    "UP007", "UP006",
    "Q000", "Q003",
    "S101", "S104", "S314", "S603", "S701",
    "SLF001",
    "T201",
    "TRY301"
]

[tool.ruff.lint.per-file-ignores]
"docs/**" = ["G004", "D104"]
"**/tests/**/*.py" = ["S106", "PLC0415"]
"**/__version__.py" = ["ALL"]
"example/features/environment.py" = ["F401"]
"framework/tests/test_framework/unit/test_locust_dispatch.py" = ["PT009", "PT027"]
"command-line-interface/src/**/*.py" = ["S607"]
"command-line-interface/tests/test_cli/unit/utils/test___init__.py" = ["W291"]

[tool.ruff.lint.mccabe]
max-complexity = 15

[tool.ruff.lint.pylint]
max-branches = 15
max-args = 10

[tool.pytest.ini_options]
pythonpath = [
    "framework/src",
    "common/src",
    "docs/src",
    "command-line-interface/src"
]
# new dependencies, can silently register a pytest plugin, which will cause monkey patchning to fail, and hence not finding any tests;
# find .venv/lib/python*/ -name 'entry_points.txt' -exec grep -A 1 'pytest11' {} \; | grep -v pytest11
# pytest --trace-config
addopts = [
    "-p", "no:requests_mock",
    "-p", "no:anyio",
    "--cov=.",
    "--cov-report=xml:coverage.xml",
    "--no-cov-on-fail"
]
testpaths = [
    "framework/tests",
    "common/tests",
    "docs/tests",
    "command-line-interface/tests"
]
timeout = 10
filterwarnings = [
    "ignore:setDaemon\\(\\) is deprecated.*:DeprecationWarning",
    "ignore:.*pkg_resources.*:DeprecationWarning",
    "ignore:Use setlocale.*instead:DeprecationWarning",
    "error:.*:gevent.monkey.MonkeyPatchWarning",
    "ignore:.*Use timezone-aware objects to represent datetimes",
    "ignore:.*use of fork\\(\\) may lead to deadlocks in the child",
    "ignore:'locale\\.getdefaultlocale' is deprecated"
]

[tool.coverage.paths]
source = [
    "framework/src",
    "common/src",
    "docs/src",
    "command-line-interface/src"
]

[tool.coverage.report]
skip_covered = true
skip_empty = true

[tool.mypy]
explicit_package_bases = true
mypy_path = "$MYPY_CONFIG_FILE_DIR/framework/src,$MYPY_CONFIG_FILE_DIR/common/src,$MYPY_CONFIG_FILE_DIR/docs/src,$MYPY_CONFIG_FILE_DIR/framework/tests,$MYPY_CONFIG_FILE_DIR/common/tests,$MYPY_CONFIG_FILE_DIR/example,$MYPY_CONFIG_FILE_DIR/command-line-interface/src,$MYPY_CONFIG_FILE_DIR/command-line-interface/tests"
files = "framework/src,framework/tests,common/src,common/tests,docs/src,docs/tests,command-line-interface/src,command-line-interface/tests"
exclude = ["framework/tests/test-project/"]
# https://github.com/python/mypy/issues/5870
#follow_missing_imports = true
show_column_numbers = true
check_untyped_defs = true
disallow_untyped_defs = true
#disallow_incomplete_defs = true
#disallow_any_generics = true
#disallow_subclassing_any = true
#disallow_untyped_calls = true
disallow_incomplete_defs = true
#disallow_untyped_decorators = true
no_implicit_optional = true
no_implicit_reexport = true
warn_unused_configs = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_return_any = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.unit.test_grizzly.test_locust_dispatch"
disable_error_code = ["type-abstract", "unused-ignore"]

[[tool.mypy.overrides]]
module = "grizzly.steps.*"
no_implicit_reexport = false

[[tool.mypy.overrides]]
module = "behave.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "pymqi.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "gevent.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "influxdb.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "lxml.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jsonpath_ng.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "parse.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "geventhttpclient.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "roundrobin.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "parameterized.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "jinja2_simple_tags.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "greenlet.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "progress.*"
ignore_missing_imports = true
