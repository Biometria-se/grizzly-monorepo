name: code quality

on:
  pull_request:
    branches: [ main ]

jobs:
  changes:
    runs-on: ubuntu-latest

    outputs:
      changes_uv: ${{ steps.mapper.outputs.changes_uv }}
      changes_npm: ${{ steps.mapper.outputs.changes_npm }}

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6.5.0
        with:
          version: "0.8.14"
          python-version: "3.13"
          enable-cache: true

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          base: "${{ vars.DEFAULT_BRANCH || 'main' }}"
          filters: .github/change-filters.yaml

      - name: map changed directories to packages
        id: mapper
        run: uv run ./extras/scripts/map-changes.py --changes '${{ steps.filter.outputs.changes }}' --branch '${{ vars.DEFAULT_BRANCH || 'main' }}'

  uv:
    needs: changes
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-latest]
        python-version: ["3.10"]  # , "3.13"]
        changes: ${{ fromJSON(needs.changes.outputs.changes_uv) }}

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6.5.0
        with:
          version: "0.8.14"
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - name: "install ${{ matrix.changes.package }} dev dependencies"
        run: |
          uv sync --locked -p ${{ matrix.python-version }} --inexact --only-dev --all-packages --no-install-project --no-install-workspace
          uv sync --locked -p ${{ matrix.python-version }} --inexact --package ${{ matrix.changes.package }}

      - name: "run ${{ matrix.changes.label }}"
        working-directory: ${{ matrix.changes.directory }}
        run: |
          uv run ${{ matrix.changes.script }}

  npm:
    needs: changes
    runs-on: ${{ matrix.image }}
    strategy:
      fail-fast: false
      matrix:
        image: [ubuntu-latest]
        python-version: ["3.10"] # , "3.13"]
        changes: ${{ fromJSON(needs.changes.outputs.changes_npm) }}

    steps:
      - uses: actions/checkout@v4

      - uses: astral-sh/setup-uv@v6.5.0
        with:
          version: "0.8.14"
          python-version: ${{ matrix.python-version }}
          enable-cache: true

      - uses: actions/setup-node@v5
        with:
          cache: 'npm'
          node-version: 24
          cache-dependency-path: "${{ matrix.changes.directory }}/package-lock.json"

      - name: "install grizzly-ls"
        run: |
            uv sync --locked -p ${{ matrix.python-version }} --package grizzly-loadtester-ls --dev --no-install-workspace --no-install-project

      - name: "install ${{ matrix.changes.package }} dev dependencies"
        working-directory: ${{ matrix.changes.directory }}
        run: |
          npm install

      - name: "run ${{ matrix.changes.label }}"
        uses: mgor/setup-xvfb@v1
        env:
          VERBOSE: true
          VIRTUAL_ENV: ./.venv
        with:
          run: |
            npm run ${{ matrix.changes.script }}
          working-directory: ${{ matrix.changes.directory }}

      - name: server logs
        if: always()
        continue-on-error: true
        working-directory: "${{ matrix.changes.directory }}/../../"
        run: |
          cat tests/project/grizzly-ls.log || true

      - name: "package ${{ matrix.changes.package }}"
        id: test-package
        if: always()
        working-directory: ${{ matrix.changes.directory }}
        run: |
          npx @vscode/vsce package

